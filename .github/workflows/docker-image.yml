name: DockerImage
on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: [self-hosted]
    env:
      CONTAINER_NAME: ProductSaleBEContainer
      IMAGE_NAME: productsale-be:latest
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          INAME=${{ env.IMAGE_NAME }}
          docker build -t $INAME -f ./src/ProductSale.Api/ProductSale.Api/Dockerfile .

      - name: Manage Docker Container
        env:
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
          BANK_ACCOUNT: ${{ secrets.BANK_ACCOUNT }}
          ACCOUNT_NAME: ${{ secrets.ACCOUNT_NAME }}
          TEMPLATE_ID: ${{ secrets.TEMPLATE_ID }}
        run: |
          CNAME=${{ env.CONTAINER_NAME }}
          INAME=${{ env.IMAGE_NAME }}

          if [ "$(docker ps -aq -f name=$CNAME)" ]; then
              if [ "$(docker ps -aq -f status=exited -f name=$CNAME)" ]; then
                  echo ":: Container $CNAME exists and is exited"
                  echo ":: Removing exited container - $CNAME"
                  docker rm $CNAME
              else
                  echo ":: Container $CNAME exists and is running"
                  echo ":: Stopping running container - $CNAME"
                  docker stop $CNAME
                  echo ":: Removing stopped container - $CNAME"
                  docker rm $CNAME
              fi
          else
              echo ":: No existing container named $CNAME"
          fi

          echo ":: Running new container - $CNAME"
          docker run -d -p 8080:8080 --name $CNAME \
            -e ConnectionStrings__DefaultConnection="$DB_CONNECTION_STRING" \
            -e BankAccount="$BANK_ACCOUNT" \
            -e AccountName="$ACCOUNT_NAME" \
            -e TemplateId="$TEMPLATE_ID" \
            $INAME
